#include <iostream>
#include <conio.h>
#include <windows.h>
#include <vector>

using namespace std;

// Dimensions of the game board
const int width = 20;
const int height = 20;

// Game variables
bool gameOver;
int x, y, fruitX, fruitY, score;
vector<pair<int, int>> snake;
int snakeDir; // 0: Stop, 1: Left, 2: Right, 3: Up, 4: Down

void setup() {
    gameOver = false;
    x = width / 2; // Snake head starting position
    y = height / 2;
    fruitX = rand() % width; // Random fruit position
    fruitY = rand() % height;
    score = 0;
    snake.clear();
    snake.push_back({x, y});
    snakeDir = 0; // Initial direction is stop
}

void draw() {
    system("cls");

    // Top border
    for (int i = 0; i < width + 2; i++) cout << "#";
    cout << endl;

    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width; j++) {
            if (j == 0) cout << "#"; // Left border

            bool printed = false;

            if (i == y && j == x) {
                cout << "O"; // Snake head
                printed = true;
            } else if (i == fruitY && j == fruitX) {
                cout << "F"; // Fruit
                printed = true;
            } else {
                for (int k = 1; k < snake.size(); k++) {
                    if (snake[k].first == j && snake[k].second == i) {
                        cout << "o"; // Snake body
                        printed = true;
                    }
                }
            }

            if (!printed) cout << " ";
            if (j == width - 1) cout << "#"; // Right border
        }
        cout << endl;
    }

    // Bottom border
    for (int i = 0; i < width + 2; i++) cout << "#";
    cout << endl;

    cout << "Score: " << score << endl;
}

void input() {
    if (_kbhit()) {
        switch (_getch()) {
            case 'a':
                if (snakeDir != 2) snakeDir = 1;
                break;
            case 'd':
                if (snakeDir != 1) snakeDir = 2;
                break;
            case 'w':
                if (snakeDir != 4) snakeDir = 3;
                break;
            case 's':
                if (snakeDir != 3) snakeDir = 4;
                break;
            case 'x':
                gameOver = true;
                break;
        }
    }
}

void logic() {
    // Move the snake's body
    for (int i = snake.size() - 1; i > 0; i--) {
        snake[i] = snake[i - 1];
    }

    // Move the head
    switch (snakeDir) {
        case 1: x--; break;
        case 2: x++; break;
        case 3: y--; break;
        case 4: y++; break;
    }

    // Check for collisions with the walls
    if (x < 0 || x >= width || y < 0 || y >= height) gameOver = true;

    // Check for collisions with itself
    for (int i = 1; i < snake.size(); i++) {
        if (snake[i].first == x && snake[i].second == y) {
            gameOver = true;
        }
    }

    // Check if the snake eats the fruit
    if (x == fruitX && y == fruitY) {
        score += 10;
        fruitX = rand() % width;
        fruitY = rand() % height;
        snake.push_back({-1, -1}); // Increase the size of the snake
    }

    // Update the head position
    snake[0] = {x, y};
}

int main() {
    setup();

    while (!gameOver) {
        draw();
        input();
        logic();
        Sleep(100); // Slow down the game loop
    }

    cout << "Game Over! Final Score: " << score << endl;
    return 0;
}

//=================================================================================

//Features:
//The game board is drawn in the console using ASCII characters.
//Snake moves based on W, A, S, D input.
//The fruit appears at random positions on the board.
//Collision detection ensures the game ends when the snake hits the wall or itself.
//Score increments when the snake eats a fruit.

//=================================================================================
